//Quick Open
/*{
	"type": "action",
	"targets": ["omnifocus"],
	"author": "Joel Berger",
	"identifier": "com.joelberger.omnifocus.quick-open",
	"version": "1.1",
	"description": "Poorly replicate Quick Open functionality of MacOS version of OmniFocus",
	"label": "Quick Open",
	"shortLabel": "Quick Open"
}*/
(() => {
	var action = new PlugIn.Action(function(selection, sender){
		// action code
		// selection options: tasks, projects, folders, tags
		
      //Get Project data
      var projects = flattenedProjects.filter(p => {
         return p.status == Project.Status.Active;
      });
      var projectNames = projects.map(project => {
         return project.name;
      });
      var projectKeys = projects.map(project => {
         return project.id.primaryKey;
      });
      var projectIndexes = new Array();
      projectNames.forEach((name, index) => {
        projectIndexes.push(index);
      });

      //Get Tag data
      var tags = flattenedTags.filter(t => {
         return t.status == Tag.Status.Active;
      });
      var tagNames = tags.map(tag => {
         return tag.name;
      });
      var tagKeys = tags.map(tag => {
         return tag.id.primaryKey;
      });
      var indexOffset = projects.length;
      var tagIndexes = new Array()
         tagNames.forEach((name, index) => {
         tagIndexes.push(index + indexOffset);
      });
      
      //Combine Project and Tag keys into a single array
      var allObjectKeys = projectKeys.concat(tagKeys);
	
	   //Setup initial menu
		var typeMenu = new Form.Field.Option(
         "type",
		   "Type",
		   [0, 1],
		   ["Project", "Tag"],
		   0
		);
      
      var projectMenu = new Form.Field.Option(
         "object", 
         "Project/Tag", 
         projectIndexes, 
         projectNames, 
         projectIndexes[0]
      );
      projectMenu.allowsNull = false;

      var inputForm = new Form();
      inputForm.addField(typeMenu);
      inputForm.addField(projectMenu);
      var formPrompt = "Select a Project/Tag";
      var buttonTitle = "Continue";
      var formPromise = inputForm.show(formPrompt,buttonTitle);

      inputForm.validate = function(formObject){
         var typeIndex = formObject.values["type"];
         var objectIndex = formObject.values["object"];
      
         //Remove Project/Tag field based upon type selection
         if(typeof objectIndex != "undefined"){
            if (typeIndex == 0 && !projectIndexes.includes(objectIndex)) {
               inputForm.removeField(inputForm.fields[1]);
            } 
            else if (typeIndex == 1 && !tagIndexes.includes(objectIndex)) {
               inputForm.removeField(inputForm.fields[1]);
            } 
         }
      
         //Create the appropriate Project/Tag field based upon type selection
         if (formObject.fields.length == 1){
            switch(typeIndex){
               case 0:
                  projectMenu = new Form.Field.Option(
                     "object", 
                     "Project/Tag",
                     projectIndexes, 
                     projectNames, 
                     projectIndexes[0]
                  );
                  inputForm.addField(projectMenu);
                  break;
               case 1:
                  tagMenu = new Form.Field.Option(
                     "object", 
                     "Project/Tag",
                     tagIndexes, 
                     tagNames, 
                     tagIndexes[0]
                  );
                  inputForm.addField(tagMenu);
            }
         }
      
         return true;
      }

      formPromise.then(function(formObject){
         var chosenIndex = formObject.values['object'];
         var chosenObjectKey = allObjectKeys[chosenIndex];
         if (chosenIndex < indexOffset) {
            URL.fromString("omnifocus:///task/" + chosenObjectKey).open();
         }
         else {
            URL.fromString("omnifocus:///tag/" + chosenObjectKey).open();
         }
      })

      formPromise.catch(function(err){
         console.error("Form cancelled", err.message);
      })
   });

	action.validate = function(selection, sender){
		// validation code
		// selection options: tasks, projects, folders, tags
		
		//Only show on iOS since Quick Open is superior on Mac
		return Device.current.iOS;
	};
	
	return action;
})();